# -*- coding: utf-8 -*-
"""Assignment #3: Conditional Statements

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1lAMgISi6ls3qEr35kGWCss74EyILG-EG

THIS IS FOR THE GRADE CALCULATOR:
- Only one user defined function (student_grade) is used to collect user input and process results.
"""

def student_grade():

  # while true loop to run again if desired
  while True:
    # try this first ...
    try:
      grade_percent = (input("Enter your grade in percent form (0-1):"))

      # in case they enter a negative number (apparently it won't work unless you specify the (-))
      if grade_percent[0] == "-":
        print("You have entered a negative percent. Please try again: ")
        continue

      # define the grade percent to be a float in case the user enters an invalid range OR not a number (valueError)
      grade_percent_f = float(grade_percent)

      if grade_percent_f > 1.0:
         print("You have entered a percentage greater than 1. Please try again: ")
         continue

      elif grade_percent_f < 0.0:
        print("You have entered a negative percent. Please try again: ")
        continue

    # This is in case the user enters a non- number which is why the condition is gven after grade_percent is defined as a float
    # If all else fails.. try this ... (except):
    except ValueError:
      print("Invalid input. Please enter a valid percentage.")
      continue

    # multiply by 100 to avoid float rounding
    letter_grade_percent = grade_percent_f * 100
    # innitialize letter grade to empty so it dosen't print every single grade
    letter_grade = ""

    # could probs put this in a user defined function to make it easier to read and debug
    if letter_grade_percent >= 97 and letter_grade_percent <= 100:
      letter_grade = "A+"
    elif letter_grade_percent >= 93 and letter_grade_percent <= 96.99:
      letter_grade = "A"
    elif letter_grade_percent >= 90 and letter_grade_percent <= 92.99:
      letter_grade = "A-"
    elif letter_grade_percent >= 87 and letter_grade_percent <= 89.99:
      letter_grade = "B+"
    elif letter_grade_percent >= 83 and letter_grade_percent <= 86.99:
      letter_grade = "B"
    elif letter_grade_percent >= 80 and letter_grade_percent <= 82.99:
      letter_grade = "B-"
    elif letter_grade_percent >= 77 and letter_grade_percent <= 79.99:
      letter_grade = "C+"
    elif letter_grade_percent >= 73 and letter_grade_percent <= 76.99:
      letter_grade = "C"
    elif letter_grade_percent >= 70 and letter_grade_percent <= 72.99:
      letter_grade = "C-"
    elif letter_grade_percent >= 67 and letter_grade_percent <= 69.99:
      letter_grade = "D+"
    elif letter_grade_percent >= 63 and letter_grade_percent <= 66.99:
      letter_grade = "D"
    elif letter_grade_percent >= 60 and letter_grade_percent <= 62.99:
      letter_grade = "D-"
    elif letter_grade_percent < 60 and letter_grade_percent >= 0:
      letter_grade = "F"

    print("--------------------------------------")
    print("Your letter grade is:", letter_grade)
    print("--------------------------------------")

    run_again = input("WOuld you like to calculate another letter grade? ('y/n'): ")
    if run_again != 'y':
        break

"""THIS IS TO OPEN CSV FILE W/ MONTHS AND DAYS
- I am using a CSV file, because it can handle more exceptions without error.
"""

# this is to open the CSV file and make sure its contents are correct
# it is helpful to open before it is referenced, so that you can refer back to the row and columns

with open('/content/MONTHS_DAYS_2023 - Sheet1 (1).csv','r') as csv_file:
  # reading and printing the contents of the CSV file
  csv_contents = csv_file.read()
  print(csv_contents)

"""MONTH --> # DAYS:
- def get_num_days will iterate through the CSV file and return the number of days that correspond to the user's input
- def user_month_input will call from get_num_days to get user input and return the proper number of days.
"""

import csv

# this is a user defined function to process user input, and handle some possible exceptions
def get_num_days(user_input_month):
    with open('/content/MONTHS_DAYS_2023 - Sheet1 (1).csv', 'r') as csvfile:
        reader = csv.DictReader(csvfile)
        # for this code, we only need to check the rows.
        for row in reader:
          # checking if the user entered a valid month OR if they entered a valid month number *(isdigit.())*, then finds the corresponding number of days
            if row['month'] == user_input_month or (user_input_month.isdigit() and int(row['month_num']) == int(user_input_month)):
                return row['days_in_month']
        # if the loop completes without finding a matching month from the user's input, return None
        return None

# This is user deifned function for num_days
def user_month_input():
    while True:
        user_input_month = input("Enter the month (ex. 'Jan', 'January') or its number: ")
        num_days_user = get_num_days(user_input_month)
        if num_days_user is None:
            print("Invalid month name or number. Please enter a valid month name or number.")
        else:
            print("_____________________________________")
            # this will make sure that num days is a float, and will call from the previous function
            print(f"Number of days: {num_days_user}")
            print("_____________________________________")

        run_again_calendar = input("Would you like to run again (y/n): ")
        if run_again_calendar != 'y':
            break

"""**THIS IS "MAIN"**
- all other user deifned functions are called withn the while statement, so the code can be re-executed without breaking.
"""

while True:
  program_choice = input("\n\nWhat program would you like to run?: ('g' for grade calculator, 'd' for days in month, 'e' to exit): \n")
  if program_choice == 'g':
    student_grade()
  elif program_choice == 'd':
    year = input("Would you like to use the year 2023?: ('y/n'):")
    if year != 'y':
      print("Too bad")
    user_month_input()
  elif program_choice == 'e':
    break
  else:
    print("Invalid choice. Please try again.\n")

  run_main_again = input("\n\nWould you like to run thr program again? ('y/n'): \n")
  if run_main_again != 'y':
    break